// Name:Tiffany Albelto
// Course Name:Software Development 1 - 202410-CEN-3024C-16046
// Date:October 1st, 2023

//Program Objective: The main objective of the program is to provide a user-friendly interface for managing a library.
// Users can perform various actions like adding books, removing books, checking out and checking in books, and
// viewing the library's database.

// Class Name:LibraryManagementSystem
//Summary:This class serves as the main entry point of the program. It contains a loop that displays a menu for various library
// operations and takes user input to perform those operations.

// Class Description:
// This program represents a library management system. It contains a main method
// that provides a menu-driven interface for users to interact with the library. The class utilizes the
// `Library` class to perform various library operations like adding books, removing books, listing the entire
// book collection, checking in /checking out books and exiting the system.

//The main method of this class initializes an instance of the `Library` class and loads books from a file.
// It then prompts the user to select an option from the menu, reads their input using a `Scanner`,
// and executes the corresponding action based on the selected option.The class handles user input using
// a switch statement, and based on the user's choice. It performs the required actions by calling
// appropriate methods from the `Library` class.

//The options provided in the menu are as follows:
//1. Add books from a file to the library database
//2. Add book to database Manually
//3. Print the database
//4. Remove book from database using a barcode number
//5. Remove book from database using book title
//6. Check out a book from library database
//7. Check in a book from library database
//8. Exit Database


import java.io.IOException;
import java.util.Scanner;




public class LibraryManagementSystem {
    public static void main(String[] args) throws IOException {

        //create a new instance of the library
        Library library = new Library();

//BookCollection Pathway
        //library.loadBooks("/Users/tiffanyalbelto/Library/Mobile Documents/com~apple~TextEdit/Documents/BookCollection.txt");

        //load books from the "BookCollection.txt" file
        library.loadBooksFromFile("BookCollection.txt");


        Scanner scanner = new Scanner(System.in);


        //user choices displayed
        int choice;

        while (true) {
            System.out.println("Library Management System Menu:");
            System.out.println("1. Add books from a file to the library database");
            System.out.println("2. Add book to database manually");
            System.out.println("3. Print the library database");
            System.out.println("4. Remove book from database using a barcode number");
            System.out.println("5. Remove book from database using book title");
            System.out.println("6. Check out a book from library database");
            System.out.println("7. Check in a book from library database");
            System.out.println("8. Exit Database");
            System.out.print("Please enter your choice (1-8): ");

            choice = scanner.nextInt();
            scanner.nextLine(); // Consume trailing newline character

            switch (choice) {
                case 1:// Add books from a file to the database
                    System.out.print("Enter the file name: ");
                    String fileName = scanner.nextLine();
                    library.loadBooksFromFile(fileName);
                    System.out.println("The following book is successfully added to the library database!");
                    library.listBooks();
                    break;

                case 2: // Add book to database
                    System.out.println("Enter book details:");
                    System.out.print("Barcode number: ");
                    int barcodeNumber = scanner.nextInt();
                    scanner.nextLine(); // Consume trailing newline character
                    System.out.print("Title: ");
                    String title = scanner.nextLine();
                    System.out.print("Author: ");
                    String author = scanner.nextLine();
                    System.out.print("Genre: ");
                    String genre = scanner.nextLine();
                    System.out.print("Status: ");
                    String status = scanner.nextLine();
                    System.out.print("Due date: ");
                    String dueDate = scanner.nextLine();

                    Book book = new Book(barcodeNumber, title, author, genre, status, dueDate);
                    library.addBook(book);
                    System.out.println("The following book is added successfully!");
                    library.listBooks();
                    break;

                case 3: // Display books in the database
                    System.out.println("Printing the database:");
                    library.listBooks();
                    break;

                case 4: // Remove book from database
                    System.out.println("Enter barcode number or title of the book to remove: ");
                    String searchQuery = scanner.nextLine();
                    boolean removed = false;
                    try{
                        int barcode = Integer.parseInt(searchQuery);
                        removed =library.removeBookByBarcode(Integer.valueOf(searchQuery));
                    } catch (NumberFormatException e){
                        removed =library.removeBookByTitle(searchQuery);
                    }
                    if (removed) {
                        System.out.println("The following book is removed successfully!");
                        library.listBooks();
                    } else {
                        System.out.println("The following book is not found in the library database.");
                    }
                    break;

                case 5: // Remove book by title
                    System.out.print("Enter the title: ");
                    title = scanner.nextLine();
                    boolean removedByTitle = library.removeBook(title);
                    if (removedByTitle) {
                        System.out.println("The following book is removed successfully!");
                        library.listBooks();
                    } else {
                        System.out.println("The following book is not found in the database.");
                    }
                    break;

                case 6: // Check out a book
                    System.out.println("Enter the title of the book you will like to check out: ");
                    String checkOutTitle = scanner.nextLine();
                    boolean checkedOut = library.checkoutBook(checkOutTitle);
                    if (checkedOut) {
                        System.out.println("The following book is checked out successfully!");
                        library.listBooks();
                    } else {
                        System.out.println("The following book is already checked out or not found in the library database.");
                    }
                    break;

                case 7: // Check in a book
                    System.out.println("Enter the title of the book you will like to check in: ");
                    String checkInTitle = scanner.nextLine();
                    boolean checkedIn = library.checkinBook(checkInTitle);
                    if (checkedIn) {
                        System.out.println("The following book is checked in successfully!");
                        library.listBooks();
                    } else {
                        System.out.println("The following book is already checked in or not found in the library database.");
                    }
                    break;


                case 8: // Exit
                    System.out.println("Exiting Library Management System.Thank you for your continued support!");
                    System.exit(0);
                    break;

                default:
                    System.out.println("Invalid choice. Please try again.");
                    break;
            }
        }
    }


}



